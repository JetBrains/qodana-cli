name: 'CI'
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

jobs:
  # lint: disabled as golangci-lint is not yet ready for Go workspaces
  test:
    name: "Test (⚙️ ${{ matrix.os }}, 🐳 ${{ matrix.container-engine }})"
    uses: ./.github/workflows/test.yaml
    with:
      os: ${{ matrix.os }}
      container-engine: ${{ matrix.container-engine }}
    secrets: inherit
    strategy:
      matrix:
        include:
          - os: macos-13  # macos-13 is the only macOS github runner supporting Docker.
            container-engine: docker@latest
          - os: windows-latest
            container-engine: docker@latest
          - os: ubuntu-latest
            container-engine: docker@latest
          - os: ubuntu-latest
            container-engine: podman@latest
          - os: ubuntu-latest
            container-engine: docker@v25.0  # See also: https://endoflife.date/docker-engine

  code-quality:
    if: github.repository == 'jetbrains/qodana-cli'
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
      actions: read
      contents: write
      security-events: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Overwrite tools (to run tests only on gh repo)
        run: >-
          touch
          cdnet/clt.zip
          tooling/baseline-cli.jar
          tooling/intellij-report-converter.jar
          tooling/qodana-fuser.jar
          clang/clang-tidy-linux-amd64.tar.gz
          clang/clang-tidy-linux-arm64.tar.gz
          clang/clang-tidy-windows-amd64.zip
          clang/clang-tidy-windows-arm64.zip
          clang/clang-tidy-darwin-amd64.tar.gz
          clang/clang-tidy-darwin-arm64.tar.gz
      - uses: docker/login-action@v3
        with:
          registry: registry.jetbrains.team
          username: ${{ secrets.SPACE_USERNAME }}
          password: ${{ secrets.SPACE_PASSWORD }}
      - uses: actions/setup-go@v5
        with:
          cache-dependency-path: "**/*.sum"
          go-version-file: go.work
      - uses: JetBrains/qodana-action@main
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
        with:
          use-nightly: true
          pr-mode: false
          upload-result: true
      - uses: actions/upload-artifact@v4
        with:
          name: qodana-artifacts
          path: "${{ runner.temp }}/qodana/results"
      - uses: github/codeql-action/init@v3
        with:
          languages: go
      - uses: github/codeql-action/autobuild@v3
      - uses: github/codeql-action/analyze@v3

#  release-nightly:
#    runs-on: sre-eqx-kata
#    needs: [ test, code-quality ]
#    container:
#      image: ghcr.io/jetbrains/qodana-cli/devcontainer:latest
#    permissions:
#      checks: write
#      pull-requests: write
#      actions: read
#      contents: write
#      security-events: write
#      packages: read
#    if: github.ref == 'refs/heads/main'
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#      - name: Overwrite tools (to run tests only on gh repo)
#        run: |
#          touch cdnet/clt.zip tooling/baseline-cli.jar tooling/intellij-report-converter.jar tooling/qodana-fuser.jar
#      - run: |
#          ./download_deps.sh
#          export TARGETARCH=$(uname -m)
#          curl -fsSL "https://codesign-distribution.labs.jb.gg/codesign-client-linux-$TARGETARCH" -o /usr/local/bin/codesign || true
#          chmod +x /usr/local/bin/codesign || true
#          cd cli && goreleaser release --clean --nightly --skip=chocolatey,nfpm,homebrew,scoop,snapcraft
#        env:
#          GH_TOKEN: ${{ github.token }}
#          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

#  install-script-check:
#    strategy:
#        fail-fast: false
#        matrix:
#            os: [ubuntu-latest, macos-latest]
#    runs-on: ${{ matrix.os }}
#    steps:
#      - uses: actions/checkout@v4
#      - run: |
#          ./install
#          ./install nightly
