project_name: qodana
builds:
  - env:
      - CGO_ENABLED=0
    ldflags:
      - -X github.com/JetBrains/qodana-cli/v2024/platform/version.Version={{ .Version }}
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    hooks:
      post:
        - cmd: | # check if the version was set correctly
            bash -c "
            set -e;
            if [ '{{ .IsSnapshot }}' = 'false' -a '{{ .Os }}' = `go env GOOS` -a '{{ .Arch }}' = `go env GOARCH` ];
              then ver=\$(chmod +x {{ .Path	}}; {{ .Path }} -v | grep 'qodana version *');
                  if [ \"\$ver\" != 'qodana version {{ .Version }}' ];
                    then echo 'Version check failed â€“ expected {{ .Version }} but got '\$ver;
                    exit 1;
                  fi;
            fi"
          output: true
        - cmd: | # sign binaries for Windows and macOS
            sh -c "
            set -e;
            if [ '{{ .IsSnapshot }}' = 'false' -a '{{ .Os }}' != 'linux' ];
            then codesign {{ if eq .Os "darwin" }}-denoted-content-type=application/x-mac-app-bin{{ end }} -signed-files-dir=./dist/{{ .ProjectName }}_{{ .Os }}_{{ .Arch }}{{ if eq .Arch "amd64" }}_v1{{ end }}{{ if eq .Arch "arm64" }}_v8.0{{ end }}/ './dist/{{ .ProjectName }}_{{ .Os }}_{{ .Arch }}{{ if eq .Arch "amd64" }}_v1{{ end }}{{ if eq .Arch "arm64" }}_v8.0{{ end }}/qodana{{ if eq .Os "windows" }}.exe{{ end }}' ;
            fi;
            mkdir -p dist/upload;
            cp {{ .Path }} dist/upload/{{ .ProjectName }}_{{ .Os }}_{{ if eq .Arch "amd64" }}x86_64{{ else }}{{ .Arch }}{{ end }}{{ if eq .Os "windows" }}.exe{{ end }}"
          output: true
archives:
  - name_template: '{{ .ProjectName }}_{{ .Os }}_{{- if eq .Arch "amd64" }}x86_64{{- else if eq .Arch "386" }}i386{{- else }}{{ .Arch }}{{ end }}'
    format_overrides:
      - goos: windows
        format: zip
nfpms:
  - vendor: "JetBrains s.r.o."
    homepage: "https://github.com/JetBrains/qodana-cli"
    maintainer: "Qodana <qodana-support@jetbrains.com>"
    description: "ðŸ”§ Run Qodana as fast as possible, with minimum effort required"
    license: "Apache-2.0"
    formats:
      - apk
      - deb
      - rpm
      - termux.deb
      - archlinux
    dependencies:
      - git
brews:
  - repository:
      owner: JetBrains
      name: homebrew-utils
    commit_author:
      name: "qodana-bot"
      email: "qodana-support@jetbrains.com"
    commit_msg_template: ":sparkles: Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    directory: Formula
    homepage: "https://github.com/JetBrains/qodana-cli"
    description: "ðŸ”§ Run Qodana as fast as possible, with minimum effort required"
    license: "Apache-2.0"
scoops:
  - repository:
      owner: "JetBrains"
      name: "scoop-utils"
    commit_author:
      name: "qodana-bot"
      email: "qodana-support@jetbrains.com"
    commit_msg_template: ":sparkles: Scoop update for {{ .ProjectName }} version {{ .Tag }}"
    homepage: "https://github.com/JetBrains/qodana-cli"
    description: "ðŸ”§ Run Qodana as fast as possible, with minimum effort required"
    license: "Apache-2.0"
chocolateys:
  - name: qodana
    title: "Qodana CLI"
    authors: "JetBrains"
    project_url: "https://github.com/JetBrains/qodana-cli/"
    icon_url: 'https://resources.jetbrains.com/storage/products/company/brand/logos/Qodana_icon.png'
    copyright: "2023 JetBrains"
    license_url: "https://github.com/JetBrains/qodana-cli/blob/main/LICENSE"
    require_license_acceptance: false
    project_source_url: "https://github.com/JetBrains/qodana-cli"
    docs_url: "https://github.com/JetBrains/qodana-cli/blob/main/README.md"
    bug_tracker_url: "https://github.com/JetBrains/qodana-cli/issues"
    tags: "code-quality jetbrains static-analysis"
    summary: "ðŸ”§ Run Qodana as fast as possible, with minimum effort required"
    description: |
      {{ .ProjectName }} is a simple cross-platform command-line tool to run Qodana linters anywhere with minimum effort required.
    release_notes: "https://github.com/JetBrains/qodana-cli/releases/tag/v{{ .Version }}"
    api_key: '{{ .Env.CHOCOLATEY_API_KEY }}'
    source_repo: "https://push.chocolatey.org/"
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"
release:
  extra_files:
    - glob: dist/upload/**
  footer: |
    ## Install
    
    > ðŸ’¡ The Qodana CLI is distributed and run as a binary. The Qodana linters with inspections are [Docker Images](https://www.jetbrains.com/help/qodana/docker-images.html) or, starting from version `2023.2`, your local/downloaded by CLI IDE installations (experimental support).
    > - To run Qodana with a container (the default mode in CLI), you must have Docker or Podman installed and running locally to support this: https://www.docker.com/get-started, and, if you are using Linux, you should be able to run Docker from the current (non-root) user (https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user)
    > - To run Qodana without a container, you must have the IDE installed locally to provide the IDE installation path to the CLI or specify the product code, and CLI will try to download the IDE automatically (experimental support).
    
    #### macOS and Linux
    ##### Install with [Homebrew](https://brew.sh) (recommended)
    ```console
    brew install jetbrains/utils/qodana
    ```
    ##### Install with our installer
    ```console
    curl -fsSL https://jb.gg/qodana-cli/install | bash
    ```
    Also, you can install `nightly` or any other version (e.g. `v2023.2.9`) the following way:
    ```
    curl -fsSL https://jb.gg/qodana-cli/install | bash -s -- nightly
    ```
    
    #### Windows
    ##### Install with [Windows Package Manager](https://learn.microsoft.com/en-us/windows/package-manager/winget/) (recommended)
    ```console
    winget install -e --id JetBrains.QodanaCLI
    ```
    ##### Install with [Chocolatey](https://chocolatey.org)
    ```console
    choco install qodana
    ```
    ##### Install with [Scoop](https://scoop.sh)
    ```console
    scoop bucket add jetbrains https://github.com/JetBrains/scoop-utils
    scoop install qodana
    ```
    
    #### Anywhere else
    Alternatively, you can install the latest binary (or the apt/rpm/deb/archlinux package) from this page.
    
    ## Update
    Update to the latest version depends on how you choose to install `qodana` on your machine.
    #### Update with [Homebrew](https://brew.sh)
    ```console
    brew upgrade qodana
    ```
    #### Update with [Scoop](https://scoop.sh)
    ```console
    scoop update qodana
    ```
    #### Update with [Chocolatey](https://chocolatey.org)
    ```console
    choco upgrade qodana
    ```
    #### Update on Linux and macOS with the installer script
    ```console
    curl -fsSL https://jb.gg/qodana-cli/install | bash
    ```
    Alternatively, you can grab the latest binary (or the apt/rpm/deb package) from this page.
changelog:
  sort: asc
  filters:
    exclude:
      - '^:memo:'
      - '^:bricks:'
      - '^:recycle:'
git:
  ignore_tags:
    - nightly
report_sizes: true
nightly:
  name_template: '{{ incpatch .Version }}-nightly'
  tag_name: nightly
  publish_release: true
  keep_single_release: true
after:
  hooks:
    - sh -c "
      set -e;
      if [ '{{ .IsSnapshot }}' = 'false' ];
      then
      codesign -gpg-key $FINGERPRINT -signed-files-dir=./dist/ dist/checksums.txt;
      gh release --repo JetBrains/qodana-cli upload {{ if .IsNightly }}nightly{{ else }}v{{ .Version}}{{ end }} dist/checksums.txt.asc;
      fi"
